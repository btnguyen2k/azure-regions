name: Azure Regions
on:
  schedule:
    # run 2 times per day (UTC)
    - cron: '7 */12 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to commit the updated data files
      id-token: write # to login to Azure
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Generate Azure regions list
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account list-locations --query '[].{name: name, regionalDisplayName: regionalDisplayName, type: type, displayName: displayName, metadata: {geography: metadata.geography, geographyGroup: metadata.geographyGroup, latitude: metadata.latitude, longitude: metadata.longitude, pairedRegion: metadata.pairedRegion[].name, physicalLocation: metadata.physicalLocation, regionCategory: metadata.regionCategory, regionType: metadata.regionType}}' > ./data/locations.json
            cat ./data/locations.json
      - name: Generate Azure Services-Products mapping
        continue-on-error: true
        id: gen_azure_products
        run: |
          cd ${GITHUB_WORKSPACE}/AzureProducts
          regions=$(az account list-locations --query "[?metadata.regionType=='Physical'].name" | jq -r '. | @csv' | tr -d '"')
          dotnet run -- -o ../data/ -r $regions
      - name: Generate Azure Services-Products mapping (retry 1)
        continue-on-error: true
        if: ${{ failure() && steps.gen_azure_products.conclusion == 'failure' }} 
        run: |
          cd AzureProducts
          regions=$(az account list-locations --query "[?metadata.regionType=='Physical'].name" | jq -r '. | @csv' | tr -d '"')
          dotnet run -- -o ../data/ -r $regions
      - name: Commit updated data files
        run: |
          cd ${GITHUB_WORKSPACE}
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          git add ./data/*.json
          git config --global user.email "<>"
          git config --global user.name "CI Build"
          git commit -am "Update data files - ${TIMESTAMP}"
          git push
      - name: Update timestamp in README.md
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          sed -i -E "s/<\!--TIMESTAMP-->/Last update: ${TIMESTAMP}/" README.md
      - name: Converts README.md to index.html
        uses: jaywcjlove/markdown-to-html-cli@main
        with:
            source: README.md
            output: index.html
            # github-corners: https://github.com/jaywcjlove/markdown-to-html-cli
            favicon: data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üåê</text></svg>
      - name: Prepare deployment artifact
        run: |
          mkdir -p out
          cp ./data/*.json out/
          mv index.html out/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write  # to deploy to Pages
      id-token: write  # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
